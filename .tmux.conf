# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

#utf setting
set-window-option -g utf8 on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

# set -g status-bg white
# set -g status-fg black

set -s escape-time 0
setw -g window-status-current-attr underscore

# 256色ターミナル
set-option -g default-terminal "screen-256color"


set -g pane-active-border-fg white
set -g pane-active-border-bg black

set-window-option -g mode-bg white
set-window-option -g mode-fg black
set-window-option -g window-status-bg black
set-window-option -g window-status-fg white
set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr bold

# Set the prefix to C-t.
unbind C-b
set -g prefix C-t
bind t send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
#unbind ^X
#bind ^X lock-server
#unbind x
#bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window -n zsh
unbind c
bind c new-window -n zsh

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-pane"

# redisplay ^R r 
unbind ^R
bind ^R refresh-client
unbind r
bind r refresh-client

# split -h h
unbind h
bind h split-window -h

# split -v v
unbind v
bind v split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

#bind H select-pane -L
#bind J select-pane -D
#bind K select-pane -U
#bind L select-pane -R
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# resize pane
bind -r C-h resize-pane -L 6
bind -r C-l resize-pane -R 6
bind -r C-j resize-pane -D 6
bind -r C-k resize-pane -U 6
bind -r s swap-pane -U

# show pane-num
bind i display-panes

# " windowlist -b
unbind '"'
bind '"' choose-window

# zshでpbcopy
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# ステータスラインカスタム関連
set -g status-attr dim
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
# set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

#set -g status-left '#[fg=colour223,bg=colour202,bold][#14H:#S]#[default]]'
set -g status-right '[#[fg=yellow,bold]#(whoami)#[default]@#[fg=yellow,bold]#H#[default]]'

set -g message-attr bold
set -g message-fg white
set -g message-bg red
